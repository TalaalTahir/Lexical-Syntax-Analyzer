Lexical Analyzer Results: 
Lexeme: B,Token  --> BEGIN : 20
Lexeme: {,Token --> LEFT_BRACK: 23
Lexeme: num,Token --> ID: 0
Lexeme: helloo,Token --> VAL_NAME: 19
Lexeme: helloo,Token --> VAL_NAME: 19
Lexeme: =,Token --> ASS_OP: 27
Lexeme: 1_1,Token --> ONE_BYTE: 12
Lexeme: go,Token --> GO_CODE: 18
Lexeme: (,Token --> LEFT_PAREN: 25
Lexeme: helloo,Token --> VAL_NAME: 19
Lexeme: <,Token --> LESS_THAN: 6
Lexeme: 3_1,Token --> ONE_BYTE: 12
Lexeme: ),Token --> RIGHT_PAREN: 26
Lexeme: {,Token --> LEFT_BRACK: 23
Lexeme: num,Token --> ID: 0
Lexeme: another,Token --> VAL_NAME: 19
Lexeme: another,Token --> VAL_NAME: 19
Lexeme: =,Token --> ASS_OP: 27
Lexeme: 200_2,Token --> TWO_BYTES: 13
Lexeme: },Token --> RIGHT_BRACK: 24
Lexeme: num,Token --> ID: 0
Lexeme: thisval,Token --> VAL_NAME: 19
Lexeme: thisval,Token --> VAL_NAME: 19
Lexeme: =,Token --> ASS_OP: 27
Lexeme: 200_2,Token --> TWO_BYTES: 13
Lexeme: /,Token --> DIV_OP: 4
Lexeme: 10_1,Token --> ONE_BYTE: 12
Lexeme: thisval,Token --> VAL_NAME: 19
Lexeme: =,Token --> ASS_OP: 27
Lexeme: 200_2,Token --> TWO_BYTES: 13
Lexeme: %,Token --> MOD_OP: 5
Lexeme: 5_1,Token --> ONE_BYTE: 12
Lexeme: thisval,Token --> VAL_NAME: 19
Lexeme: =,Token --> ASS_OP: 27
Lexeme: 20_2,Token --> TWO_BYTES: 13
Lexeme: *,Token --> MULT_OP: 3
Lexeme: 10_1,Token --> ONE_BYTE: 12
Lexeme: },Token --> RIGHT_BRACK: 24
Lexeme: E,Token --> END: 21
